{
  "lex_context": [
    "categoryDetail",
    "=",
    "event.getTarget",
    "(",
    ")",
    ".",
    "getName",
    "(",
    ")",
    ";",
    "else",
    "{",
    "categoryString",
    "=",
    "categoryObject.getClass",
    "(",
    ")",
    ".",
    "getName",
    "(",
    ")",
    ";",
    "}",
    "}",
    "Log",
    "log",
    "=",
    "getLog",
    "("
  ],
  "excode_context": "METHOD{void,messageLogged} OPEN_PART TYPE(BuildEvent) VAR(BuildEvent,event) CLOSE_PART OPBLK STSTM{IF} OPEN_PART VAR(boolean,initialized) CLOSE_PART OPBLK STSTM{EXPR} TYPE(Object) VAR(Object,categoryObject) ASSIGN(ASSIGN) VAR(BuildEvent,event) M_ACCESS(BuildEvent,getTask,0) OPEN_PART CLOSE_PART ENSTM{EXPR} STSTM{EXPR} TYPE(String) VAR(String,categoryString) ASSIGN(ASSIGN) LIT(null) ENSTM{EXPR} STSTM{EXPR} TYPE(String) VAR(String,categoryDetail) ASSIGN(ASSIGN) LIT(null) ENSTM{EXPR} STSTM{IF} OPEN_PART VAR(Object,categoryObject) OP(EQUALS) LIT(null) CLOSE_PART OPBLK STSTM{EXPR} VAR(Object,categoryObject) ASSIGN(ASSIGN) VAR(BuildEvent,event) M_ACCESS(BuildEvent,getTarget,0) OPEN_PART CLOSE_PART ENSTM{EXPR} STSTM{IF} OPEN_PART VAR(Object,categoryObject) OP(EQUALS) LIT(null) CLOSE_PART OPBLK STSTM{EXPR} VAR(Object,categoryObject) ASSIGN(ASSIGN) VAR(BuildEvent,event) M_ACCESS(BuildEvent,getProject,0) OPEN_PART CLOSE_PART ENSTM{EXPR} STSTM{EXPR} VAR(String,categoryString) ASSIGN(ASSIGN) VAR(String,PROJECT_LOG) ENSTM{EXPR} STSTM{EXPR} VAR(String,categoryDetail) ASSIGN(ASSIGN) VAR(BuildEvent,event) M_ACCESS(BuildEvent,getProject,0) OPEN_PART CLOSE_PART M_ACCESS(<unk>,getName,0) OPEN_PART CLOSE_PART ENSTM{EXPR} CLBLK ENSTM{IF} STSTM{ELSE} OPBLK STSTM{EXPR} VAR(String,categoryString) ASSIGN(ASSIGN) VAR(String,TARGET_LOG) ENSTM{EXPR} STSTM{EXPR} VAR(String,categoryDetail) ASSIGN(ASSIGN) VAR(BuildEvent,event) M_ACCESS(BuildEvent,getTarget,0) OPEN_PART CLOSE_PART M_ACCESS(<unk>,getName,0) OPEN_PART CLOSE_PART ENSTM{EXPR} CLBLK ENSTM{ELSE} CLBLK ENSTM{IF} STSTM{ELSE} OPBLK STSTM{IF} OPEN_PART VAR(BuildEvent,event) M_ACCESS(BuildEvent,getTarget,0) OPEN_PART CLOSE_PART OP(NOT_EQUALS) LIT(null) CLOSE_PART OPBLK STSTM{EXPR} VAR(String,categoryString) ASSIGN(ASSIGN) VAR(Object,categoryObject) M_ACCESS(Object,getClass,0) OPEN_PART CLOSE_PART M_ACCESS(<unk>,getName,0) OPEN_PART CLOSE_PART ENSTM{EXPR} STSTM{EXPR} VAR(String,categoryDetail) ASSIGN(ASSIGN) VAR(BuildEvent,event) M_ACCESS(BuildEvent,getTarget,0) OPEN_PART CLOSE_PART M_ACCESS(<unk>,getName,0) OPEN_PART CLOSE_PART ENSTM{EXPR} CLBLK ENSTM{IF} STSTM{ELSE} OPBLK STSTM{EXPR} VAR(String,categoryString) ASSIGN(ASSIGN) VAR(Object,categoryObject) M_ACCESS(Object,getClass,0) OPEN_PART CLOSE_PART M_ACCESS(<unk>,getName,0) OPEN_PART CLOSE_PART ENSTM{EXPR} CLBLK ENSTM{ELSE} CLBLK ENSTM{ELSE} STSTM{EXPR} TYPE(Log) VAR(Log,log) ASSIGN(ASSIGN) M_ACCESS(CommonsLoggingListener,getLog,2) OPEN_PART",
  "next_excode": [
    [
      "VAR(LogFactory) F_ACCESS(String,FACTORY_DEFAULT)",
      "VAR(LogFactory) F_ACCESS(String,FACTORY_PROPERTY)",
      "VAR(String)",
      "VAR(LogFactory) F_ACCESS(String,PRIORITY_KEY)",
      "VAR(LogFactory) F_ACCESS(String,FACTORY_PROPERTIES)",
      "VAR(CommonsLoggingListener) F_ACCESS(String,PROJECT_LOG)",
      "VAR(LogFactory) F_ACCESS(String,DIAGNOSTICS_DEST_PROPERTY)",
      "VAR(LogFactory) F_ACCESS(String,HASHTABLE_IMPLEMENTATION_PROPERTY)",
      "VAR(LogFactory) F_ACCESS(String,TCCL_KEY)",
      "VAR(CommonsLoggingListener) F_ACCESS(String,TARGET_LOG)"
    ],
    [
      "VAR(LogFactory) F_ACCESS(String,FACTORY_DEFAULT)",
      "VAR(String)"
    ],
    [
      "VAR(LogFactory) F_ACCESS(String,FACTORY_DEFAULT)",
      "VAR(String)"
    ]
  ],
  "next_lex": [
    [
      [
        "logFactory.FACTORY_DEFAULT"
      ],
      [
        "logFactory.FACTORY_PROPERTY"
      ],
      [
        "categoryDetail",
        "categoryString",
        "TARGET_LOG",
        "PROJECT_LOG"
      ],
      [
        "logFactory.PRIORITY_KEY"
      ],
      [
        "logFactory.FACTORY_PROPERTIES"
      ],
      [
        "this.PROJECT_LOG"
      ],
      [
        "logFactory.DIAGNOSTICS_DEST_PROPERTY"
      ],
      [
        "logFactory.HASHTABLE_IMPLEMENTATION_PROPERTY"
      ],
      [
        "logFactory.TCCL_KEY"
      ],
      [
        "this.TARGET_LOG"
      ]
    ],
    [
      [
        "logFactory.FACTORY_DEFAULT"
      ],
      [
        "categoryString"
      ]
    ],
    [
      [
        "logFactory.FACTORY_PROPERTY"
      ],
      [
        "categoryString"
      ]
    ]
  ],
  "method_name": "StrongMethod",
  "class_name": "StrongClass",
  "expected_excode": "VAR(String) SEPA(,) VAR(String) SEPA(,) VAR(String)",
  "expected_lex": "categoryString, categoryString, categoryString",
  "excode_context_no_method": "TYPE(Log) VAR(Log,log) ASSIGN(ASSIGN)",
  "method_candidate_excode": [
    "M_ACCESS(a,helloWorld,2)",
    "M_ACCESS(c,productManager,3)",
    "M_ACCESS(d,productManager,4)"
  ]
}